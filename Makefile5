export SHELL = /bin/bash
TOP_DIR = $(shell pwd)
BIN_DIR = $(TOP_DIR)/bin
SRC_DIR = $(TOP_DIR)/src
LIB_DIR = $(TOP_DIR)/lib
OBJ_DIR = $(TOP_DIR)/obj

# common src file
COMM_SRC_DIR = $(TOP_DIR)/comm
COMM_C_SRC = $(wildcard $(COMM_SRC_DIR)/*.c)
COMM_CPP_SRC = $(wildcard $(COMM_SRC_DIR)/*.cpp)
COMM_SRC = $(COMM_C_SRC) $(COMM_CPP_SRC)

COMM_C_OBJ = $(patsubst $(COMM_SRC_DIR)/%.c,$(COMM_SRC_DIR)/%.o,$(COMM_C_SRC))
COMM_CPP_OBJ = $(patsubst $(COMM_SRC_DIR)/%.cpp,$(COMM_SRC_DIR)/%.obj,$(COMM_CPP_SRC))
COMM_OBJ = $(COMM_C_OBJ) $(COMM_CPP_OBJ)


# source file
C_SRC = $(wildcard $(SRC_DIR)/*.c)
CPP_SRC = $(wildcard $(SRC_DIR)/*.cpp)
C_CPP_SRC = $(C_SRC) $(CPP_SRC)

# C_OBJ = $(patsubst $(C_SRC)/%.c,$(OBJ_DIR)/%.o,$(C_SRC))
# CPP_OBJ = $(patsubst $(CPP_SRC)/%.cpp,$(OBJ_DIR)/%.obj,$(CPP_SRC))
C_OBJ = $(patsubst %.c, /%.o,$(C_SRC))
CPP_OBJ = $(patsubst %.cpp, %.obj,$(CPP_SRC))
OBJ = $(C_OBJ) $(CPP_OBJ)

INC = -I$(LIB_DIR)

CXX = g++
CXXFLAGS = -g  -Wall
CXXFLAGS += $(INC)

CC=gcc
CFLAGS = -g -O2
CFLAGS += $(INC)
# LDLIBS = -lpthread

PROGS = 6_3_point hello

all:   $(PROGS)

$(PROGS):  $(COMM_OBJ) $(OBJ)
	for target in $(PROGS); \
	do  \
	$(CXX) $(CXXFLAGS) $(COMM_OBJ) $(OBJ_DIR)/$$target.obj -o $$target; \
	done
	cp $(PROGS) $(BIN_DIR)

clean:
	-$(RM) -rf $(PROGS) $(BIN_DIR)/*  $(OBJ_DIR)/* *~ *.o *.dSYM
	-$(RM) $(COMM_SRC_DIR)/*.obj $(COMM_SRC_DIR)/*.o *.o *~

$(SRC_DIR)/%.obj:  $(SRC_DIR)/%.cpp
	$(CXX) -c $(CXXFLAGS) $< -o $@
	mv $(SRC_DIR)/*.obj $(OBJ_DIR)

$(SRC_DIR)/%.o: $(SRC_DIR)/%.c
	$(CC) -c $(CFLAG) $< -o  $@
	mv $(SRC_DIR)/*.o $(OBJ_DIR)

$(COMM_SRC_DIR)/%.obj: $(COMM_SRC_DIR)/%.cpp
	@echo $(CPP_OBJ)
	@echo "obj 1"
	$(CXX) -c $(CXXFLAGS) $< -o $@

$(COMM_SRC_DIR)/%.o: $(COMM_SRC_DIR)/%.c
	$(CC) -c $(CFLAGS) $< -o $@
